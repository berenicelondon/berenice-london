name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: 18
  BUN_VERSION: latest

jobs:
  lint-and-type-check:
    name: 🔍 Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: 📦 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🔍 Run ESLint
        run: bun run lint

      - name: 🏷️ Type check
        run: bunx tsc --noEmit

      - name: 🎨 Check formatting
        run: bunx biome check --apply=off

  build-and-test:
    name: 🏗️ Build & Test
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: 📦 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🏗️ Build application
        run: bun run build
        env:
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}

      - name: 🧪 Run tests
        run: bun test || echo "No tests found"

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            .next/
            out/
          retention-days: 1

  security-audit:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: 🔒 Run security audit
        run: bun audit || echo "Audit completed with warnings"

  deploy-netlify:
    name: 🚀 Deploy to Netlify
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, build-and-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
      url: https://berenicelondon.co.uk
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: 📦 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🏗️ Build for production
        run: bun run build
        env:
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}

      - name: 🚀 Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './out'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions - ${{ github.sha }}"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: 📊 Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            https://berenicelondon.co.uk
          uploadArtifacts: true
          temporaryPublicStorage: true

  deploy-preview:
    name: 🎭 Deploy Preview
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, build-and-test]
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: 📦 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🏗️ Build for preview
        run: bun run build
        env:
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}

      - name: 🎭 Deploy preview to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './out'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Preview deploy - PR #${{ github.event.number }}"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  notify-deployment:
    name: 📢 Notify Deployment
    runs-on: ubuntu-latest
    needs: deploy-netlify
    if: always() && github.ref == 'refs/heads/main'
    steps:
      - name: 📢 Deployment Success
        if: needs.deploy-netlify.result == 'success'
        run: |
          echo "🎉 Deployment successful!"
          echo "🌐 Site: https://berenicelondon.co.uk"
          echo "📊 Status: Live"

      - name: ❌ Deployment Failed
        if: needs.deploy-netlify.result == 'failure'
        run: |
          echo "❌ Deployment failed!"
          echo "🔍 Check logs for details"
          exit 1
